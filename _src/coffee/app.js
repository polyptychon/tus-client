// Generated by CoffeeScript 1.8.0
(function() {
  var $, Q, ResumableUpload, files, tus, upload;

  $ = require("jquery");

  ResumableUpload = require("./ResumableUpload.coffee");

  tus = require("./Tus.coffee");

  Q = require("q");

  upload = null;

  files = null;

  $('.js-stop').click(function(e) {
    e.preventDefault();
    if (files) {
      return tus.stopAll(files);
    }
  });

  $('input[type=file]').change(function() {
    var $input, displayUploadedFiles, doChecksum, logErrors, openDialogIfFileExist, options, overwriteMessage, resetUI, startUpload, updateProgress;
    $input = $(this);
    files = this.files;
    overwriteMessage = "Some files are on server. Do you want to overwrite them?";
    $('.js-stop').removeClass('disabled');
    $('.progress').addClass('active');
    options = {
      endpoint: 'http://localhost:1080/files/',
      resetBefore: $('#reset_before').prop('checked'),
      resetAfter: true,
      chunkSize: 1,
      minChunkSize: 51200,
      maxChunkSize: 2097152,
      path: ""
    };
    openDialogIfFileExist = function(error) {
      if (confirm(overwriteMessage)) {
        return true;
      } else {
        return Q.reject(error);
      }
    };
    doChecksum = function() {
      if ($('#checksum').prop('checked')) {
        return tus.checksumAll(files, options);
      }
    };
    startUpload = function() {
      return tus.uploadAll(files, options);
    };
    displayUploadedFiles = function(result) {
      var $download, file, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        $download = $("<a>Download " + file.name + " (" + file.size + " bytes " + file.md5 + ")</a><br />").appendTo($(".container"));
        $download.attr('href', result.url);
        _results.push($download.addClass('btn').addClass('btn-success'));
      }
      return _results;
    };
    updateProgress = function(result) {
      return $('.progress-bar').css('width', "" + result.value.percentage + "%");
    };
    logErrors = function(error) {
      return console.log(error);
    };
    resetUI = function() {
      files = null;
      $input.wrap('<form>').closest('form').get(0).reset();
      $input.unwrap();
      $('.progress').removeClass('active');
      return $('.js-stop').addClass('disabled');
    };
    return tus.checkAll(files, options)["catch"](openDialogIfFileExist).then(doChecksum).then(startUpload).then(displayUploadedFiles).progress(updateProgress)["catch"](logErrors).fin(resetUI);
  });

}).call(this);

//# sourceMappingURL=app.js.map
